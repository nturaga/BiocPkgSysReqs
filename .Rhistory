devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all
devtools::load_all()
.rspm_get()
.rspm_get("")
devtools::load_all()
.rspm_get("")
.rspm_get("1/packages?_limit=3")
.rspm_get()
.rspm_get("")
#' @export
rspm_get_repos <- function(type="R") {
query <- paste0("?type=", type)
.rspm_get(path = query)
}
rspm_get_repos()
tibble(rspm_get_repos())
as_tibble(rspm_get_repos())
library(tibble)
as_tibble(rspm_get_repos())
names(rspm_get_repos())
(rspm_get_repos())
xx <- (rspm_get_repos())
xx
stack(x)
stack(xx)
enframe(xx)
enframe(xx) %>% mutate(value = map(value, as.character)) %>% unnest()
library(dplyr)
enframe(xx) %>% mutate(value = map(value, as.character)) %>% unnest()
library(tidyverse)
enframe(xx) %>% mutate(value = map(value, as.character)) %>% unnest()
enframe(xx) %>% mutate(value = map(name, as.character)) %>% unnest()
enframe(xx) %>% mutate(value = map(value, as.character))
enframe(xx) %>% mutate(value = map(name, as.character))
enframe(xx) %>% mutate(map(name, as.character))
enframe(xx)
xx
names(xx)
xx$description
lapply(xx, `[`, description)
lapply(xx, `[`, "description")
lapply(xx, `[`, "id")
lapply(xx, `[`, "type")
lapply(xx, `[`, "name")
tibble(lapply(xx, `[`, "name"))
unlist(lapply(xx, `[`, "name"))
tibble(unlist(lapply(xx, `[`, "name")))
tibble(name = unlist(lapply(xx, `[`, "name")))
xx
names(xx)
names(xx[1])
names(xx[[1]])
xx[[1]]
xx[[1]]
library(purrr)
map(xx, "description")
map(xx, "type")
names(xx[[1]])
names(xx[[1]]) == names(xx[[2]])
tibble(names(xx[[1]]))
xx %>% transpose()
tibble(t(sapply(xx, c)))
as.data.frame(t(sapply(xx, c)))
as_tibble(t(sapply(xx, c)))
as.data.frame(t(sapply(xx, c)))
as_tibble(as.data.frame(t(sapply(xx, c)))
)
library(dplyr)
as.data.frame(t(sapply(xx, c))
)
yy = as.data.frame(t(sapply(xx, c)))
View(yy)
yy = tibble(as.data.frame(t(sapply(xx, c))))
View(yy)
yy
yy = as.data.frame(t(sapply(xx, c)))
class(yy$id)
yy = as.data.frame(t(unlist(sapply(xx, c))))
yy
yy = as.data.frame(t(sapply(xx, c)))
yy
yy = as.data.frame(t(sapply(xx, function(x) unnest(c(x))))
)
yy = as.data.frame(t(sapply(xx, function(x) unnest(c(x)))))
yy = unnest(as.data.frame(t(sapply(xx, c))))
yy = as.data.frame(t(sapply(xx, c))))
yy = as.data.frame(t(sapply(xx, c)))
yy
yy = as_tibble(t(sapply(xx, c)))
yy
map(yy, unnest)
yy = as_tibble(t(sapply(xx, c)))
yy
flatten(yy)
yy
?purrr::map_df()
purrr::map_df(yy, unnest)
purrr::map_df(yy, unnest, 2)
apply(yy, unnest, 1)
apply(yy, unnest, 2)
apply(yy, 2, unnest)
names(yy)
yy %>% unnest(names)
unnest(yy, .id = "name")
unnest(yy, .id = names(yy))
unnest(yy, cols = c(id, name, created, description, type))
yy = as_tibble(t(map(xx, c)))
yy
yy = as_tibble(t(map_chr(xx, c)))
yy = as_tibble(t(vapply(xx, c, list)))
yy = as_tibble(t(vapply(xx, c, "list")))
yy = as_tibble(t(vapply(xx, c, "as.list")))
xx
sapply(xx, c)
vapply(xx, c,FUN.VALUE = character(1))
?vapply
vapply(xx, c)
vapply(xx, c, list())
vapply(xx, c, list(1))
vapply(xx, c, character(1))
sapply(xx, c, character(1))
sapply(xx, c)
lapply(xx, c)
sapply(xx, c)
sapply(xx, c)
class(sapply(xx, c)[1]
)
vapply(xx, c, list(1))
vapply(xx, c, list(5))
vapply(xx, c, list())
sapply(xx, c)
class(sapply(xx, c))
vapply(xx, c, matrix(1))
vapply(xx, c, array(1))
sapply(xx, c)
t(sapply(xx, c))
t(sapply(xx, c))
tapply(xx, c, character(1))
tapply(xx, c)
mapply(xx, c)
apply(xx, c)
apply(xx, 2, c)
apply(xx, 1, c)
sapply(xx, `[`)
vapply(xx, `[`, list(1))
vapply(xx, `[`, matrix(1))
sapply(xx, function(i) `[`(i))
sapply(xx, function(i) as.character(`[`(i)))
as_tibble(sapply(xx, function(i) as.character(`[`(i))))
lapply(xx, function(i) as.character(`[`(i)), character(1))
sapply(xx, function(i) as.character(`[`(i)))
class(sapply(xx, function(i) as.character(`[`(i))))
class(sapply(xx, function(i) as.character(`[`(i)))[1])
vapply(xx, function(i) as.character(`[`(i)), character(1))
vapply(xx, function(i) as.character(`[`(i)), matrix(1))
sapply(xx, function(i) as.character(`[`(i)))
tibble(sapply(xx, function(i) as.character(`[`(i))))
names(sapply(xx, function(i) as.character(`[`(i))))
sapply(t(xx), function(i) as.character(`[`(i))))
sapply(xx, function(i) as.character(`[`(i))))
xx
tibble(cols =  c(id, name, created, description, type))
tibble(c(id, name, created, description, type))
i = tibble()
i
colnames(i) <-  c(id, name, created, description, type)
colnames(i) <-  c("id", "name", "created", "description", "type")
i
names(i)
colnames(i)
tibble(sapply(xx, function(i) as.character(`[`(i))))
t(tibble(sapply(xx, function(i) as.character(`[`(i)))))
colnames(t(tibble(sapply(xx, function(i) as.character(`[`(i)))))) <-   c(id, name, created, description, type)
t(tibble(sapply(xx, function(i) as.character(`[`(i)))))
tibble(sapply(xx, function(i) as.character(`[`(i))))
devtools::load_all()
`rm(list = c("rspm_get_repos"))`
rm(list=  ls())
devtools::load_all()
rspm_get_repos()
xx
query <- paste0("?type=", "R")
res <- .rspm_get(path = query)
res
.rspm_get_query <- function(query) {
response <- GET(
query,
accept("application/json")
)
stop_for_status(response)
content(response, as="parsed")
}
query <- paste0("?type=", "R")
res <- .rspm_get(path = query)
res
xx
res
res
res %>% bind_rows
devtools::load_all()
rm(list= ls())
devtools::load_all()
rm(list= ls())
rm(list = c(".rspm_get_query"))
devtools::load_all()
rspm_get_repos()
rspm_get_repos(type="adfaf")
devtools::load_all()
rspm_get_repos()
rspm_get_repos(type="adfaf")
rspm_get_repos(type=1)
rspm_get_repos(type=NA)
rspm_get_repos()
devtools::document()
list(id = 2, limit = 2, page = 1, name = "igraph", name_search = "igraph")
.rspm_get("/%s/packages?",list(id = 2, limit = 2, page = 1, name = "igraph", name_search = "igraph")
)
GET("https://packagemanager.rstudio.com/__api__/repos/2/packages?",query = list(limit = 2, page = 1, name = "igraph", name_search = "igraph")
)
devtools::load_all()
rspm_get_repos()
devtools::load_all()
rspm_get_packages(2,2,2, "igraph", "igraph")
debug(rspm_get_packages)
rspm_get_packages(2,2,2, "igraph", "igraph")
devtools::load_all()
debug(rspm_get_packages)
rspm_get_packages(2,2,2, "igraph", "igraph")
query
debug(.rspm_get)
url
debug(.rspm_get_query)
url
query
View(query)
response
devtools::load_all()
rspm_get_packages(2,2,2, "igraph", "igraph")
devtools::load_all()
rspm_get_packages(2,2,2, "igraph", "igraph")
class(2)
rspm_get_packages(2, "igraph", "igraph")
devtools::load_all()
rspm_get_packages(2, "igraph", "igraph")
usethis::use_testthat()
devtools::document()
use_test()
usethis::use_test()
usethis::use_test()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
?rspm_get_package_sysreqs()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
